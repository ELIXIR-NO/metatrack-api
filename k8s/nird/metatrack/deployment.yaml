apiVersion: apps/v1
kind: Deployment
metadata:
  name: metatrack-api
  namespace: elixir-uit-ns11105k
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metatrack-api
  template:
    metadata:
      labels:
        app: metatrack-api
    spec:
      containers:
        - name: api
          image: ghcr.io/elixir-no/metatrack-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            # Neo4j configuration
            - name: SPRING_NEO4J_URI
              value: bolt://neo4j-service:7687
            - name: SPRING_NEO4J_AUTHENTICATION
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: auth
            # Keycloak (issuer and token endpoints exposed via ingress)
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI
              value: https://auth.elixir-uit.sigma2.no/realms/metatrack
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN_URI
              value: https://auth.elixir-uit.sigma2.no/realms/metatrack/protocol/openid-connect/token
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: metatrack-secret
                  key: oauth-client-id
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: metatrack-secret
                  key: oauth-client-secret
            # Optional: custom properties if referenced in code
            - name: KEYCLOAK_URL
              value: https://auth.elixir-uit.sigma2.no
            - name: KEYCLOAK_REALM
              value: metatrack
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
            limits:
              cpu: 2000m
              memory: 4Gi
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5